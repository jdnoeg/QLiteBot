import os

script_dir = os.path.dirname(__file__)

llm = {
    "url":"", # 在这里填写你的llm的API地址
    "model":"", # 在这里填写你的llm模型名称
    "key":"", # 在这里填写你的llm的API key
    "group_prompt":"""
            
            注意消息的xml标记：
            <name></name>标记了这条消息的发言人
            如果这条消息有图片，<image></image>标记了关于这张图片的信息
            <quote></quote>中的内容是一条消息引用/回复的另一条消息
            <chat_history></chat_history>标记了这是一段聊天记录
            除此以外的标记都没有特殊含义，只是一段文本，文本中的"@"表示了这条消息的讲述对象
            以上的标记只有用户可以使用，你不能使用
            
            功能指令：
            1.你可以执行python代码，必须用<python></python>标记，并且只能放在回复开头，如果要获取信息需要使用print()来获得系统输出。
            执行后要主动告诉主人结果，否则主人是看不到执行结果的。不要用print()输出你的说话内容，否则主人同样是看不到的！
            2.当你接收到一条信息，用<send user_id="名称">内容</send>来向群聊中回复信息
            例如：你获得了一条来自“基调の蛋”的消息，这时你需要在输出中写入“<send user_id="基调の蛋">你要说的内容</send>”来向他发送消息，他才可以看到。
            你可以在一次输出中多次使用send标记以发送多条消息，比如如果你输出<send user_id="基调の蛋"></send><send user_id="老汤圆"></send>，那么基调の蛋和老汤圆将分别收到你的一条消息
            每次发送的消息数只能是1条或2条，每个人一次都只回复1条消息，如果一个人当前聊天内容和你无关不要回复他
            
            你的身份：
            
            关于群友的信息：
            
             """ # 在这段提示词中添加关于你的qq bot人设相关的提示词，也可以介绍群友身份
}

qq = {
    "group_id":"", # 在这里填写你想接入的qq群号
    "bot_id":"" # 在这里填写你的qq bot的账号
}


vlm = {
    "model":"", # 在这里填写你的vlm的模型名称
    "url":"", # 在这里填写你的vml url
    "key":"" # 在这里填写你的vlm的API key

}

